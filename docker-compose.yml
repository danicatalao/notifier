version: '3.9'
services:

  db:
    container_name: postgres
    image: postgres
    volumes:
      - ./pg-data:/var/lib/postgresql/data
      - ./scripts/db/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'pass'
      POSTGRES_DB: 'postgres'
    ports:
      - 5432:5432
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"    # AMQP protocol port
      - "15672:15672"  # Management interface port
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq_log:/var/log/rabbitmq
      - ./configs/rabbitmq/definitions.json:/opt/definitions.json
      - ./configs/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
      - RABBITMQ_LOAD_DEFINITIONS=true
    restart: unless-stopped

  server:
    build:
      context: .
      dockerfile: server.Dockerfile
    container_name: server
    image: server
    env_file:
    - ./cmd/server/.env
    ports:
      - 8081:8081
    depends_on:
      - db

  producer:
    build:
      context: .
      dockerfile: producer.Dockerfile
    container_name: producer
    image: producer
    env_file:
    - ./cmd/producer/.env
    depends_on:
      - db
      - rabbitmq

  consumer:
    build:
      context: .
      dockerfile: consumer.Dockerfile
    container_name: consumer
    image: consumer
    env_file:
    - ./cmd/consumer/.env
    depends_on:
      - db
      - rabbitmq

volumes:
  pg-data:
  rabbitmq_data:
  rabbitmq_log: